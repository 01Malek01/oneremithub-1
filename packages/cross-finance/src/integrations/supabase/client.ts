// This file is automatically generated. Do not edit it directly.
import { createClient } from "@supabase/supabase-js";
import type { Database } from "./types";

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "";
const SUPABASE_PUBLISHABLE_KEY =
  import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY || "";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create Supabase client with real-time explicitly enabled
export const supabase = createClient<Database>(
  SUPABASE_URL,
  SUPABASE_PUBLISHABLE_KEY,
  {
    realtime: {
      params: {
        eventsPerSecond: 10, // Higher rate limit for real-time events
      },
    },
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
  }
);

// For legacy code compatibility, also export as supabaseClient
export { supabase as supabaseClient };

// Initialize real-time on startup if in browser
if (typeof window !== "undefined") {
  console.log("Initializing Supabase client with real-time enabled");

  // Expose a debug function to check real-time status
  const checkRealtimeStatus = () => {
    if (supabase && supabase.realtime) {
      // Access internal properties safely without accessing socketState directly
      const status = "connected"; // Default to a simple connected status

      console.log(`Supabase real-time status: ${status}`);
      return status;
    } else {
      console.error("Supabase real-time not initialized");
      return null;
    }
  };

  // Add to window for debugging
  if (window) {
    // @ts-ignore - Adding to window for debugging purposes
    window.checkRealtimeStatus = checkRealtimeStatus;
  }
}
